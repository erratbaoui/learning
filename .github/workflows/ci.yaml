name: Java CI/CD with Docker Staging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the project
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      # Run tests
      - name: Run tests
        run: mvn test --file pom.xml

      # Upload artifact for deploy
      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      # Checkout code again
      - name: Checkout code
        uses: actions/checkout@v4

      # Download the artifact from build job
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target/

      # Set up Docker environment (no apt-get needed)
      - name: Set up Docker
        uses: docker/setup-docker@v3

      # Build Docker image using your Dockerfile in docker/
      - name: Build Docker image
        run: docker build -t myapp:staging -f docker/Dockerfile .

      # Run container as staging simulation
      - name: Run container
        run: |
          docker run -d --name staging -p 8080:8080 myapp:staging
          docker ps

      # Optional: health check to ensure the app is running
      - name: Verify container is healthy
        run: |
          sleep 5
          if ! curl -s http://localhost:8080/actuator/health | grep "UP"; then
            echo "Container health check failed"
            exit 1
          fi