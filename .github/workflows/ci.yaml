name: Java CI/CD with Docker Staging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Verify JAR file exists
        run: ls -lh target/

      - name: Build Docker image
        run: docker build -t myapp:staging -f docker/Dockerfile .

      - name: Verify files for Docker
        run: ls -lh . docker target

      - name: Run container
        run: |
          docker run -d --rm --name staging -p 8080:8080 myapp:staging
          docker ps

      - name: Show container logs
        run: docker logs staging

      - name: Verify container is healthy
        run: |
          sleep 10
          if ! curl -s http://localhost:8080/actuator/health | grep "UP"; then
            echo "Container health check failed"
            exit 1
          fi